{"version":3,"sources":["components/CatalogItem.js","components/Loader.js","components/Catalog.js","utilities/index.js","App.js","serviceWorker.js","index.js"],"names":["CatalogItem","props","_props$data","data","selected","onSelect","_data$header","header","_data$headerSelectedH","headerSelectedHovered","title","subtitle","features","size","footer","disabled","image","handleClick","element","classList","add","setTimeout","remove","articleClassName","react_default","a","createElement","className","onClick","e","currentTarget","onMouseEnter","onMouseLeave","map","item","index","key","split","subitem","isNaN","reduce","result","concat","Object","toConsumableArray","src","source","alt","width","height","value","unit","Loader","Catalog","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","items","dataIsFetching","handleItemSelected","bind","assertThisInitialized","_this2","setState","id","newItems","objectSpread","_this3","_this$state","components_Loader","components_CatalogItem","Component","App","components_Catalog","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cdac1656.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CatalogItem = (props) => {\n  const { data = {}, selected, onSelect } = props;\n\n  const {\n    header = 'Сказочное заморское яство',\n    headerSelectedHovered = 'Котэ не одобряет?',\n    title,\n    subtitle,\n    features,\n    size,\n    footer,\n    disabled,\n    image\n  } = data;\n\n  const handleClick = (element) => {\n    if (!disabled) {\n      onSelect();\n    } else {\n      element.classList.add('shake');\n\n      setTimeout(() => {\n        if (element) {\n          element.classList.remove('shake')\n        }\n      }, 400);\n\n    }\n  }\n\n  const handleMouseEnter = (element) => {\n    if (!disabled) {\n      element.classList.add('hovered');\n    }\n  }\n\n  const handleMouseLeave = (element) => {\n    element.classList.remove('hovered');\n  }\n\n  const articleClassName = 'catalog-item' + (disabled ? ' disabled' : '') + (selected ? ' selected' : '');\n\n  return (\n    <article\n      className={articleClassName}\n      onClick={(e) => handleClick(e.currentTarget)}\n      onMouseEnter={(e) => handleMouseEnter(e.currentTarget)}\n      onMouseLeave={(e) => handleMouseLeave(e.currentTarget)}\n    >\n      <header className=\"catalog-item__header\">\n        <div className=\"catalog-item-header__corner\"></div>\n        <div className=\"catalog-item-header__text-container\">\n          <p className=\"catalog-item-header__text catalog-item-header__text--default\">{header}</p>\n          {selected && <p className=\"catalog-item-header__text catalog-item-header__text--hover\">{headerSelectedHovered}</p>}\n        </div>\n      </header>\n      <div className=\"catalog-item__main\">\n        <h2 className=\"catalog-item__title\">{title}</h2>\n        <h3 className=\"catalog-item__subtitle\">{subtitle}</h3>\n        {features &&\n          <ul className=\"catalog-item__features\">\n            {features.map((item, index) => (\n              <li\n                key={index}\n                className=\"catalog-item__feature\"\n              >{item.split(' ')\n                    .map(subitem => isNaN(subitem) ? subitem + ' ' : (<b>{subitem}</b> ))\n                    .reduce((result, subitem) => [...result, ' ', subitem], [])\n              }</li>\n            ))}\n          </ul>\n        }\n        <div className=\"catalog-item__image-container\">\n          <img\n            className=\"catalog-item__image\"\n            src={image.source}\n            alt={image.alt}\n            width=\"auto\"\n            height=\"auto\"\n          />\n        </div>\n        <div className=\"catalog-item__size\">\n          <p className=\"catalog-item__amount\">{size.value}</p>\n          <p className=\"catalog-item__unit\">{size.unit}</p>\n        </div>\n      </div>\n      <footer className=\"catalog-item__footer\">\n        {disabled\n          ? (<p>Печалька, {subtitle} закончился.</p>)\n          : selected\n            ? (<p>{footer}</p>)\n            : (<p>Чего сидишь? Порадуй котэ, <button className=\"catalog-item__link\" onClick={handleClick}>купи.</button></p>)\n        }\n      </footer>\n    </article>\n  );\n}\n\nCatalogItem.propTypes = {\n  data: PropTypes.shape({\n    header: PropTypes.string,\n    headerSelectedHovered: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    subtitle: PropTypes.string,\n    features: PropTypes.arrayOf(PropTypes.string),\n    size: PropTypes.shape({\n      value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n      ]).isRequired,\n      unit: PropTypes.string.isRequired\n    }),\n    footer: PropTypes.string.isRequired,\n    disabled: PropTypes.bool,\n    image: PropTypes.shape({\n      source: PropTypes.string,\n      alt: PropTypes.string\n    })\n  }),\n  selected: PropTypes.bool,\n  onSelect: PropTypes.func\n}\n\nexport default CatalogItem;\n","import React from 'react';\n\nconst Loader = () => (\n  <div className=\"triple-spinner\"></div>\n);\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport { getStaticData } from '../utilities';\n\nimport CatalogItem from './CatalogItem';\nimport Loader from './Loader';\n\nclass Catalog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [],\n      dataIsFetching: true\n    };\n\n    this.handleItemSelected = this.handleItemSelected.bind(this);\n  }\n\n  componentDidMount() {\n    //API-like loader\n    setTimeout(() => {\n      this.setState({\n        items: getStaticData(),\n        dataIsFetching: false\n      });\n    }, 1000);\n  }\n\n  handleItemSelected(id) {\n    const { items } = this.state;\n\n    const newItems = items.map((item, index) => {\n      if (index === id && item !== item.disabled) {\n        return {\n          ...item,\n          selected: !item.selected\n        }\n      } else {\n        return item;\n      }\n    });\n\n    this.setState({\n      items: newItems\n    })\n  }\n\n  render() {\n    const { items, dataIsFetching } = this.state;\n\n    if (dataIsFetching) return (\n      <div className=\"catalog\">\n        <Loader />\n      </div>\n    );\n\n    return (\n      <div className=\"catalog\">\n        {items.map((item, index) => (\n          <CatalogItem\n            key={index}\n            data={item}\n            onSelect={() => this.handleItemSelected(index)}\n            selected={item.selected}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default Catalog;\n","export const getStaticData = () => { return [\n  {\n    header: 'Сказочное заморское яство',\n    headerSelectedHovered: 'Котэ не одобряет?',\n    title: 'Нямушка',\n    subtitle: 'с фуа-гра',\n    features: [\n      '10 порций',\n      'мышь в подарок'\n    ],\n    size: {\n      value: '0,5',\n      unit: 'кг'\n    },\n    footer: 'Печень утки разварная с артишоками.',\n    disabled: false,\n    image: {\n      source: './assets/images/cat.png',\n      alt: 'Нямушка с фуа-гра'\n    }\n  }, {\n    header: 'Сказочное заморское яство',\n    headerSelectedHovered: 'Котэ не одобряет?',\n    title: 'Нямушка',\n    subtitle: 'с рыбой',\n    features: [\n      '40 порций',\n      '2 мыши в подарок'\n    ],\n    size: {\n      value: '2',\n      unit: 'кг'\n    },\n    footer: 'Головы щучьи с чесноком да свежайшая сёмгушка.',\n    disabled: false,\n    image: {\n      source: './assets/images/cat.png',\n      alt: 'Нямушка с фуа-гра'\n    }\n  }, {\n    header: 'Сказочное заморское яство',\n    headerSelectedHovered: 'Котэ не одобряет?',\n    title: 'Нямушка',\n    subtitle: 'с курой',\n    features: [\n      '100 порций',\n      '5 мышей в подарок',\n      'заказчик доволен'\n    ],\n    size: {\n      value: '5',\n      unit: 'кг'\n    },\n    footer: 'Филе из цыплят с трюфелями в бульоне.',\n    disabled: true,\n    image: {\n      source: './assets/images/cat.png',\n      alt: 'Нямушка с фуа-гра'\n    }\n  }\n]};\n","import React from 'react';\nimport Catalog from './components/Catalog';\n\nconst App = () => (\n  <div className=\"App\">\n    <h1 className=\"title\">Ты сегодня покормил кота?</h1>\n    <Catalog />\n  </div>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}